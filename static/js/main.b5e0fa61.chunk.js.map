{"version":3,"sources":["components/tickets/TicketItem.module.css","components/layout/MainNavigation.module.css","components/ui/Card.module.css","components/tickets/TicketList.module.css","components/ui/Card.js","store/queue-context.js","components/tickets/TicketItem.js","components/tickets/TicketList.js","pages/AllTickets.js","components/tickets/NewTicketForm.js","pages/NewTicket.js","pages/Info.js","pages/Queue.js","components/layout/MainNavigation.js","App.js","index.js","components/tickets/NewTicketForm.module.css"],"names":["module","exports","Card","props","className","classes","card","children","QueueContext","createContext","queue","totalQueue","addQueue","queueElement","removeQueue","ticketId","itemInQueue","pqueue","this","values","index1","index2","temp","index","length","parentIndex","Math","floor","priority","swap","value","push","bubbleUp","elementPriority","leftChildIndex","rightChildIndex","leftChildPriority","rightChildPriority","indexToSwap","poppedNode","pop","bubbleDown","QueueContextProvider","useState","queueElements","setQueueElements","context","enqueue","prevQueueElements","filter","ticket","id","some","Provider","TicketItem","queueCtx","useContext","item","content","fname","lname","date","notes","actions","onClick","TicketList","list","tickets","map","AllTicketsPage","isLoading","setIsLoading","loadedTickets","setLoadedTickets","useEffect","fetch","then","response","json","data","key","NewTicketForm","priorityInputRef","useRef","fnameInputRef","lnameInputRef","dateInputRef","notesInputRef","form","onSubmit","event","preventDefault","ticketData","parseInt","current","onAddTicket","control","htmlFor","type","required","min","placeholder","ref","rows","NewTicketPage","history","useHistory","meetupData","method","body","JSON","stringify","headers","replace","InfoPage","QueuePage","MainNavigation","header","logo","to","App","path","exact","AllTickets","NewTicket","Queue","Info","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b5e0fa61.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TicketItem_item__2hA5S\",\"content\":\"TicketItem_content__1kSOw\",\"actions\":\"TicketItem_actions__5SSB7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"active\":\"MainNavigation_active__oN3Ka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3_jzl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"TicketList_list__GWc5_\"};","\nimport classes from './Card.module.css';\n\nfunction Card(props) {\n    return (\n        <div className={classes.card}>{props.children}</div>\n    );\n}\n\nexport default Card;","import { createContext, useState } from 'react';\n\nconst QueueContext = createContext({\n  queue: [],\n  totalQueue: 0,\n  addQueue: (queueElement) => {},\n  removeQueue: (ticketId) => {},\n  itemInQueue: (ticketId) => {},\n});\n\n\nclass PriorityQueue {\n  constructor() {\n    this.values = [];\n  }\n\n  swap(index1, index2) {\n    let temp = this.values[index1];\n    this.values[index1] = this.values[index2];\n    this.values[index2] = temp;\n    return this.values;\n  }\n\n  bubbleUp() {\n    //get index of inserted element\n    let index = this.values.length - 1;\n    //loop while index is not 0 or element no loger needs to bubble\n    while (index > 0) {\n      //get parent index via formula\n      let parentIndex = Math.floor((index - 1) / 2);\n      //if values is greater than parent, swap the two\n      if (this.values[parentIndex].priority > this.values[index].priority) {\n        //swap with helper method\n        this.swap(index, parentIndex);\n        //change current index to parent index\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    return 0;\n  }\n\n  enqueue(value) {\n    this.values.push(value);\n    //calculate parent, if parent is greater swap\n    //while loop or recurse\n    this.bubbleUp();\n    return this.values;\n  }\n\n  bubbleDown() {\n    let parentIndex = 0;\n    const length = this.values.length;\n    const elementPriority = this.values[0].priority;\n    //loop breaks if no swaps are needed\n    while (true) {\n      //get indexes of child elements by following formula\n      let leftChildIndex = 2 * parentIndex + 1;\n      let rightChildIndex = 2 * parentIndex + 2;\n      let leftChildPriority, rightChildPriority;\n      let indexToSwap = null;\n      // if left child exists, and is greater than the element, plan to swap with the left child index\n      if (leftChildIndex < length) {\n        leftChildPriority = this.values[leftChildIndex].priority;\n        if (leftChildPriority < elementPriority) {\n          indexToSwap = leftChildIndex;\n        }\n      }\n      //if right child exists\n      if (rightChildIndex < length) {\n        rightChildPriority = this.values[rightChildIndex].priority;\n\n        if (\n          //if right child is greater than element and there are no plans to swap\n          (rightChildPriority < elementPriority && indexToSwap === null) ||\n          //OR if right child is greater than left child and there ARE plans to swap\n          (rightChildPriority < leftChildPriority && indexToSwap !== null)\n        ) {\n          //plan to swap with the right child\n          indexToSwap = rightChildIndex;\n        }\n      }\n      //if there are no plans to swap, break out of the loop\n      if (indexToSwap === null) {\n        break;\n      }\n      //swap with planned element\n      this.swap(parentIndex, indexToSwap);\n      //starting index is now index that we swapped with\n      parentIndex = indexToSwap;\n    }\n  }\n\n  dequeue() {\n    //swap first and last element\n    this.swap(0, this.values.length - 1);\n    //pop max value off of values\n    let poppedNode = this.values.pop();\n    //re-adjust heap if length is greater than 1\n    if (this.values.length > 1) {\n      this.bubbleDown();\n    }\n\n    return poppedNode;\n  }\n}\n\nvar pqueue = new PriorityQueue();\n\nexport function QueueContextProvider(props) {\n  const [queueElements, setQueueElements] = useState([]);\n\n  function addQueueHandler(queueElement) {\n    //setQueueElements((prevQueueElements) => {\n    //    return prevQueueElements.concat(queueElement);\n    //});\n\n    //var tempQueue = queueElements.slice().concat(queueElement);\n    //tempQueue.sort((a, b) => (a.priority < b.priority ? 1 : -1));\n    setQueueElements(pqueue.enqueue(queueElement));\n    //pqueue.items.push(1);\n    //console.log(pqueue.items);\n  }\n\n  function removeQueueHandler(ticketId) {\n    setQueueElements((prevQueueElements) => {\n      return prevQueueElements.filter((ticket) => ticket.id != ticketId);\n    });\n  }\n\n  function itemInQueueHandler(ticketId) {\n    return queueElements.some((ticket) => ticket.id === ticketId);\n  }\n\n  const context = {\n    queue: queueElements,\n    totalQueue: queueElements.length,\n    addQueue: addQueueHandler,\n    removeQueue: removeQueueHandler,\n    itemInQueue: itemInQueueHandler,\n  };\n\n  return (\n    <QueueContext.Provider value={context}>\n      {props.children}\n    </QueueContext.Provider>\n  );\n}\n\nexport default QueueContext;\n","import Card from '../ui/Card';\nimport { useContext } from 'react';\n\nimport QueueContext from '../../store/queue-context';\n\nimport classes from './TicketItem.module.css';\n\nfunction TicketItem(props) {\n\n    const queueCtx = useContext(QueueContext);\n    const itemInQueue = queueCtx.itemInQueue(props.id);\n\n    function toggleQueueStatusHandler() {\n        if (itemInQueue) {\n            queueCtx.removeQueue(props.id)\n        } else {\n            queueCtx.addQueue({\n            id: props.id, \n            priority: props.priority, \n            fname: props.fname,\n            lname: props.lname,\n            date: props.date,\n            notes: props.notes\n            });\n        }\n    }\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <div className={classes.content}>\n          <h3>{props.priority}</h3>\n          <p>{props.fname}</p>\n          <p>{props.lname}</p>\n          <p>{props.date}</p>\n          <p>{props.id}</p>\n          <p>{props.notes}</p>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={toggleQueueStatusHandler}>{itemInQueue ? 'Dequeue' : 'Enqueue'}</button>\n        </div>\n      </Card>\n    </li>\n  );\n}\n\nexport default TicketItem;\n","import TicketItem from './TicketItem';\n\nimport classes from './TicketList.module.css';\n\nfunction TicketList(props) {\n  return (\n    <ul className={classes.list}>\n      {props.tickets.map((ticket) => (\n        <TicketItem \n            key={ticket.id} \n            id={ticket.id} \n            priority={ticket.priority} \n            fname={ticket.fname} \n            lname={ticket.lname}\n            date={ticket.date}\n            notes={ticket.notes}/>\n      ))}\n    </ul>\n  );\n}\n\nexport default TicketList;\n","import TicketList from '../components/tickets/TicketList';\n\nimport { useState, useEffect } from 'react';\n\nconst DUMMY_DATA = [\n  {\n    id: 'm1',\n    priority: 1,\n    fname: 'John',\n    lname: 'Doe',\n    date: 'June 24, 2021',\n    notes: 'notes',\n  },\n];\n\nfunction AllTicketsPage() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadedTickets, setLoadedTickets] = useState([]);\n\n  useEffect(() => {\n      setIsLoading(true);\n    fetch('https://react-triage-queue-default-rtdb.firebaseio.com/tickets.json')\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        const tickets = [];\n\n        for (const key in data) {\n            const ticket = {\n                id: key,\n                ...data[key]\n            };\n            tickets.push(ticket)\n        }\n\n        setIsLoading(false);\n        setLoadedTickets(tickets);\n      });\n  }, []);\n\n  if (isLoading) {\n    return (\n      <section>\n        <p>Loading...</p>\n      </section>\n    );\n  }\n\n  return (\n    <section>\n      <h1>All Tickets</h1>\n      <TicketList tickets={loadedTickets} />\n    </section>\n  );\n}\n\nexport default AllTicketsPage;\n","import { useRef } from 'react';\nimport Card from '../ui/Card';\n\nimport classes from './NewTicketForm.module.css';\n\nfunction NewTicketForm(props) {\n\n  const priorityInputRef = useRef();\n  const fnameInputRef = useRef();\n  const lnameInputRef = useRef();\n  const dateInputRef = useRef();\n  const notesInputRef = useRef();\n\n  function submitHandler(event) {\n    event.preventDefault();\n    const enteredPriority = parseInt(priorityInputRef.current.value);\n    const enteredFname = fnameInputRef.current.value;\n    const enteredLname = lnameInputRef.current.value;\n    const enteredDate = dateInputRef.current.value;\n    const enteredNotes = notesInputRef.current.value;\n\n    const ticketData = {\n      priority: enteredPriority,\n      fname: enteredFname,\n      lname: enteredLname,\n      date: enteredDate,\n      notes: enteredNotes\n    };\n\n    props.onAddTicket(ticketData);\n  }\n\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='priority'>Priority</label>\n          <input\n            type='number'\n            required\n            id='priority'\n            min='1'\n            placeholder='1'\n            ref={priorityInputRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='fname'>First Name</label>\n          <input type='text' required id='fname' ref={fnameInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='lname'>Last Name</label>\n          <input type='text' required id='lname' ref={lnameInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='date'>Date</label>\n          <input type='date' required id='date' ref={dateInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='notes'>Notes</label>\n          <textarea required id='notes' rows='5' ref={notesInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button>Add Ticket</button>\n        </div>\n      </form>\n    </Card>\n  );\n}\n\nexport default NewTicketForm;\n","import { useHistory } from 'react-router-dom';\n\nimport NewTicketForm from '../components/tickets/NewTicketForm';\n\nfunction NewTicketPage() {\n  const history = useHistory();\n\n  function addTicketHandler(meetupData) {\n    fetch(\n      'https://react-triage-queue-default-rtdb.firebaseio.com/tickets.json',\n      {\n        method: 'POST',\n        body: JSON.stringify(meetupData),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n    ).then(() => {\n        history.replace('/');\n    });\n  }\n\n  return (\n    <section>\n      <h1>Add New Ticket</h1>\n      <NewTicketForm onAddTicket={addTicketHandler} />\n    </section>\n  );\n}\n\nexport default NewTicketPage;\n","function InfoPage() {\n\n    return (\n        <div>Info Page</div>\n    );\n}\n\nexport default InfoPage;","import { useContext } from 'react';\n\nimport QueueContext from '../store/queue-context';\nimport TicketList from '../components/tickets/TicketList'\n\nfunction QueuePage() {\n\n    const queueCtx = useContext(QueueContext);\n\n    let content;\n\n    if (queueCtx.totalQueue === 0) {\n        content = <p>No tickets</p>\n    } else {\n        content = <TicketList tickets={queueCtx.queue}/>\n    }\n\n    return (\n        <section>\n            <h1>Queue</h1>\n            {content}\n        </section>\n    );\n}\n\nexport default QueuePage;","import { Link } from 'react-router-dom';\n\nimport classes from './MainNavigation.module.css';\n\nfunction MainNavigation() {\n    return (\n        <header className={classes.header}>\n            <div className={classes.logo}>Triage Queue - ReactJS</div>\n            <nav>\n                <ul>\n                    <li>\n                        <Link to='/'>All Tickets</Link>\n                    </li>\n                    <li>\n                        <Link to='/new-ticket'>Add New Ticket</Link>\n                    </li>\n                    <li>\n                        <Link to='/queue'>Queue</Link>\n                    </li>\n                    <li>\n                        <Link to='/info'>Info</Link>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    );\n}\n\nexport default MainNavigation;","import { Route, Switch } from 'react-router-dom';\n\nimport AllTicketsPage from './pages/AllTickets';\nimport NewTicketPage from './pages/NewTicket';\nimport InfoPage from './pages/Info';\nimport QueuePage from './pages/Queue';\nimport MainNavigation from './components/layout/MainNavigation';\n\nfunction App() {\n  return (\n    <div>\n      <MainNavigation />\n      <Switch>\n        <Route path='/' exact>\n          <AllTicketsPage />\n        </Route>\n        <Route path='/new-ticket'>\n          <NewTicketPage />\n        </Route>\n        <Route path='/queue'>\n          <QueuePage />\n        </Route>\n        <Route path='/info'>\n          <InfoPage />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { QueueContextProvider } from './store/queue-context';\n\nReactDOM.render(\n  <QueueContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </QueueContextProvider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewTicketForm_form__3sfTK\",\"control\":\"NewTicketForm_control__3Cfnq\",\"actions\":\"NewTicketForm_actions__1KrzS\"};"],"sourceRoot":""}